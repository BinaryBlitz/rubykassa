{"name":"Rubykassa","tagline":"Yet another Ruby wrapper for Robokassa API","body":"## The Rubykassa gem\r\n\r\n[![Gem Version](https://badge.fury.io/rb/rubykassa.png)](http://badge.fury.io/rb/rubykassa)\r\n[![Build Status](https://secure.travis-ci.org/ZeroOneStudio/rubykassa.png)](http://travis-ci.org/ZeroOneStudio/rubykassa)\r\n[![Coverage Status](https://coveralls.io/repos/ZeroOneStudio/rubykassa/badge.png)](https://coveralls.io/r/ZeroOneStudio/rubykassa)\r\n[![Code Climate](https://codeclimate.com/github/ZeroOneStudio/rubykassa.png)](https://codeclimate.com/github/ZeroOneStudio/rubykassa)\r\n[![Dependency Status](https://gemnasium.com/ZeroOneStudio/rubykassa.png)](https://gemnasium.com/ZeroOneStudio/rubykassa)\r\n[![Inline docs](http://inch-ci.org/github/ZeroOneStudio/rubykassa.svg?branch=master)](http://inch-ci.org/github/ZeroOneStudio/rubykassa)\r\n\r\nby [Zero One][] (we.are@zeroone.st)\r\n\r\n[Zero One]: http://zeroone.st\r\n\r\nYet another Ruby wrapper for [Robokassa API][]. Make Robokassa to work with your Rails project without pain. Rubykassa took the best from [robokassa gem][] and [Active Merchant Robokassa integration] but easier to use and setup.\r\n\r\n[Robokassa API]: http://robokassa.ru/ru/Doc/Ru/Interface.aspx\r\n[robokassa gem]: https://github.com/shaggyone/robokassa\r\n[Active Merchant Robokassa integration]: https://github.com/Shopify/active_merchant/tree/master/lib/active_merchant/billing/integrations/robokassa\r\n\r\n## Installation\r\n\r\nAdd to your `Gemfile`:\r\n\r\n    gem \"rubykassa\"\r\n\r\n## Usage\r\n\r\nRun `rails g rubykassa:install`, get an initializer with the following code:\r\n\r\n    Rubykassa.configure do |config|\r\n      config.login = ENV[\"ROBOKASSA_LOGIN\"]\r\n      config.first_password = ENV[\"ROBOKASSA_FIRST_PASSWORD\"]\r\n      config.second_password = ENV[\"ROBOKASSA_SECOND_PASSWORD\"]\r\n      config.mode = :test # or :production\r\n      config.http_method = :get # or :post\r\n      config.xml_http_method = :get # or :post\r\n    end\r\n\r\nand configure it with your credentials.    \r\n\r\nAlso, you need to specify Result URL, Success URL and Fail URL at the \"Technical Settings\" (Технические настройки) in your Robokassa dashboard:\r\n\r\n* Result URL: `http://<your_domain>/robokassa/paid`\r\n* Success URL: `http://<your_domain>/robokassa/success`\r\n* Fail URL: `http://<your_domain>/robokassa/fail`\r\n\r\nTo define custom success/fail callbacks you can also use the initializer:\r\n\r\n    Rubykassa.configure do |config|\r\n      ...\r\n      config.success_callback = ->(notification) { render text: 'success' }\r\n      config.fail_callback    = ->(notification) { redirect_to root_path }\r\n      config.result_callback  = ->(notification) { render text: notification.success }\r\n    end\r\n\r\nLambdas are called in RobokassaController so you can respond with [any kind that is supported by Rails](http://guides.rubyonrails.org/layouts_and_rendering.html#creating-responses).\r\n\r\nNOTE: `result_callback` should always return `\"OK#{ invoice_id }\"` string. So, implement your custom logic above `render text: notification.success` line.\r\n\r\nMode is `:test` by default. For production you have to use `:production`.\r\n`http_method` and `xml_http_method` are `:get` by default but can be configured as `:post`\r\n\r\nOnce you are done, simply use `pay_url` helper in your view:\r\n\r\n    <%= pay_url \"Pay with Robokassa\", ivoice_id, total_sum %>\r\n\r\nAdditionally you may want to pass extra options. There is no problem:\r\n\r\n    <%= pay_url \"Pay with Robokassa\", ivoice_id, total_sum, { description: \"Invoice description\", email: \"foo@bar.com\", currency: \"WMZM\", culture: :ru } %>\r\n\r\nOr if you would like to pass some custom params use `custom` key in options hash:\r\n\r\n    <%= pay_url \"Pay with Robokassa\", ivoice_id, total_sum, { description: \"Invoice description\", email: \"foo@bar.com\", currency: \"WMZM\", culture: :ru, custom: { param1: \"value1\", param2: \"value2\" }} %>        \r\n\r\nIf you need to implement Robokassa's XML interface functionality you have to the following:\r\n\r\n    xml_interface = Rubykassa::XmlInterface.new do\r\n      self.invoice_id = your_invioce_id\r\n      self.total = your_total_sum\r\n      self.language = :ru # can be :en, :ru is default\r\n    end\r\n\r\nthen call whatever you need\r\n\r\n    xml_interface.get_currencies_list\r\n    xml_interface.get_payment_methods\r\n    xml_interface.get_rates\r\n    xml_interface.op_state\r\n\r\n## Supported Rubies and Rails versions\r\n\r\nRubies: \r\n* 1.9.3\r\n* 2.0.0\r\n* 2.1.0\r\n\r\nRails:\r\n* ~> 3.2.18\r\n* ~> 4.0.0\r\n* ~> 4.1.0\r\n\r\n## License\r\n\r\nThis project rocks and uses MIT-LICENSE\r\nCopyright (c) 2013-2014 [Zero One][]\r\n\r\n[ZERO.ONE]: http://www.zeroone.st\r\n\r\n\r\n[![Bitdeli Badge](https://d2weczhvl823v0.cloudfront.net/ZeroOneStudio/rubykassa/trend.png)](https://bitdeli.com/free \"Bitdeli Badge\")\r\n","google":"UA-41881276-1","note":"Don't delete this file! It's used internally to help with page regeneration."}